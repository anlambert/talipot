# Tulip continuous integration on Linux and Mac OS platforms through TravisCI.
# Two type of builds are performed by os:
#  - a "legacy" Tulip build using :
#     * default system compiler (GCC 5.4 on Linux, clang from Xcode7.3 on Mac OS)
#     * Qt 5.5 on Linux, Qt 5.9 on MacOS
#     * Python 2.7
#  - a "modern" Tulip build using:
#     * recent compiler (GCC 8.1 on Linux, clang 7.0 from MacPorts or Homebrew on Mac OS)
#     * Qt 5.11 on Linux, Qt 5.12 on MacOS
#     * Python 3.7 on Linux, Python 2.7 on MacOS
# As TravisCI limits build job times to 45 minutes, Tulip is built in two successive stages
# to avoid timeouts (which happened often with MacOs builds):
#  - a core build with no Tulip OpenGL and Qt components
#  - a complete build including OpenGL and Qt components
# The trick is to use travis build cache and ccache to cache already compiled object
# files between stages and thus not exceeding Travis build timeout limits

# inform travis that we are building a cpp project
language: cpp

# define build jobs
jobs:
  include:
    #==============================================================================================================================================================
    # Tulip-Python wheels build on manylinux1
    - stage: Tulip-Python wheels build (manylinux1, manylinux2010)
      os: linux
      dist: trusty
      cache:
        directories:
          - $HOME/ccache

      sudo: required
      env:
        - ARCH=x86_64
        - DOCKER_IMAGE=quay.io/pypa/manylinux1_x86_64

      services:
        - docker

      before_install:
        - echo 'DOCKER_OPTS="-H tcp://127.0.0.1:2375 -H unix:///var/run/docker.sock -s devicemapper"' | sudo tee /etc/default/docker > /dev/null
        - sudo service docker restart
        - sleep 5
        - sudo docker pull ${DOCKER_IMAGE}
        - sudo docker create -v $HOME/ccache:/ccache --name ccache ${DOCKER_IMAGE}

      script:
        - sudo docker run --rm=true -e CCACHE_DIR=/ccache --volumes-from ccache --cap-add SYS_ADMIN -v `pwd`:/tulip:rw ${DOCKER_IMAGE} /bin/bash -c "bash -xe /tulip/bundlers/linux/tulip_python_wheels_manylinux_build.sh"

    -
      os: linux
      dist: trusty
      cache:
        directories:
          - $HOME/ccache

      sudo: required
      env:
        - ARCH=x86_64
        - DOCKER_IMAGE=quay.io/pypa/manylinux2010_x86_64

      services:
        - docker

      before_install:
        - echo 'DOCKER_OPTS="-H tcp://127.0.0.1:2375 -H unix:///var/run/docker.sock -s devicemapper"' | sudo tee /etc/default/docker > /dev/null
        - sudo service docker restart
        - sleep 5
        - sudo docker pull ${DOCKER_IMAGE}
        - sudo docker create -v $HOME/ccache:/ccache --name ccache ${DOCKER_IMAGE}

      script:
        - sudo docker run --rm=true -e CCACHE_DIR=/ccache --volumes-from ccache --cap-add SYS_ADMIN -v `pwd`:/tulip:rw ${DOCKER_IMAGE} /bin/bash -c "bash -xe /tulip/bundlers/linux/tulip_python_wheels_manylinux_build.sh"