#!/bin/bash

# This script is CentOS Stream 8.x specific, it intends to create a
# talipot portable bundle (using AppImageKit) suitable to
# run on most linux distributions

TALIPOT_INSTALL_DIR=@CMAKE_INSTALL_PREFIX@
OUTPUT_DIR=/tmp
QMAKE=@QT_QMAKE_EXECUTABLE@

usage() {
  echo "Usage: $(basename $0) [OPTIONS]"
  cat <<EOF
Options:
  --appdir <dir> (indicate directory where Talipot.AppDir will be created, default is /tmp)
EOF
  exit $1
}

while test $# -gt 0; do
  case $1 in
    --appdir)
      shift
      OUTPUT_DIR=$1
      ;;
    --help)
      usage 0
      ;;
    *)
      usage 1
      ;;
  esac
  shift
done

BUNDLE_DIR=$OUTPUT_DIR/Talipot.AppDir

# if BUNDLE_DIR already exists
# remove it
if [ -d $BUNDLE_DIR ]; then
  rm -rf $BUNDLE_DIR
fi

# create BUNDLE_DIR
mkdir $BUNDLE_DIR
BUNDLE_BIN_DIR=$BUNDLE_DIR/usr/bin
mkdir -p $BUNDLE_BIN_DIR
BUNDLE_LIB_DIR=$BUNDLE_DIR/usr/lib
mkdir -p $BUNDLE_LIB_DIR
BUNDLE_SHARE_DIR=$BUNDLE_DIR/usr/share
mkdir -p $BUNDLE_SHARE_DIR/metainfo
BUNDLE_USR_DIR=$BUNDLE_DIR/usr

# create AppRun executable file
APPRUN_FILE=$BUNDLE_DIR/AppRun
echo "#!/bin/sh" > $APPRUN_FILE
echo "BUNDLE_DIR=\"\$(dirname \$0)\"" >> $APPRUN_FILE
echo "export PYTHONHOME=\${BUNDLE_DIR}/usr" >> $APPRUN_FILE
echo "export TLP_DIR=\${BUNDLE_DIR}/usr/lib" >> $APPRUN_FILE
echo "\${BUNDLE_DIR}/usr/bin/talipot \$*" >> $APPRUN_FILE
chmod 755 $APPRUN_FILE

# create desktop file
DESKTOP_FILE=$BUNDLE_DIR/talipot.desktop
echo "[Desktop Entry]" > $DESKTOP_FILE
echo "Name=Talipot" >> $DESKTOP_FILE
echo "Type=Application" >> $DESKTOP_FILE
echo "Exec=talipot" >> $DESKTOP_FILE
echo "Icon=Talipot" >> $DESKTOP_FILE
echo "Categories=Science;" >> $DESKTOP_FILE

# create qt.conf file
QTCONF_FILE=$BUNDLE_BIN_DIR/qt.conf
echo "[Paths]" > $QTCONF_FILE
echo "Prefix=.." >> $QTCONF_FILE

# copy Talipot.png
cp @talipot_SOURCE_DIR@/bundlers/linux/Talipot.png $BUNDLE_DIR

# copy talipot.appdata.xml
cp @talipot_SOURCE_DIR@/bundlers/linux/talipot.appdata.xml \
  $BUNDLE_SHARE_DIR/metainfo

# copy talipot exe
cp -v -p $TALIPOT_INSTALL_DIR/bin/talipot $BUNDLE_BIN_DIR
# copy all lib and share installed files (no include)
echo "copying $TALIPOT_INSTALL_DIR/lib files into $BUNDLE_LIB_DIR"
cp -Rp $TALIPOT_INSTALL_DIR/@CMAKE_INSTALL_LIBDIR@/* $BUNDLE_LIB_DIR
# no need of lib/cmake
rm -rf $BUNDLE_LIB_DIR/cmake
echo "copying $TALIPOT_INSTALL_DIR/share files into $BUNDLE_SHARE_DIR"
cp -Rp $TALIPOT_INSTALL_DIR/share $BUNDLE_USR_DIR

# copy graphviz plugins needed by talipot plugins wrapping graphviz layouts
cp -v -Rp /usr/lib64/graphviz $BUNDLE_LIB_DIR/graphviz

# set up LD_LIBRARY_PATH with the installation path of the Qt libs used
export QT_INSTALL_LIBS_DIR=$(${QMAKE} -query QT_INSTALL_LIBS)
export LD_LIBRARY_PATH=${QT_INSTALL_LIBS_DIR}:${LD_LIBRARY_PATH}

# extend LD_LIBRARY_PATH to ensure PYTHON_LIBRARY can be found
# even if a non standard installation is in use
export LD_LIBRARY_PATH=$(dirname @PYTHON_LIBRARY@):$LD_LIBRARY_PATH

# add Python environment
rm -f $BUNDLE_LIB_DIR/libpython*
PYTHON_LIB=$(ldd $(ls $BUNDLE_LIB_DIR/libtalipot-python*) | \
  grep libpython | awk '{print $3}')
# we need to create a symlink as the libtalipot-python*.so
# performs a dlopen on libpythonX.Y.so when it is loaded
if [ "$PYTHON_LIB" != "" ]; then
  cp -v --preserve=mode $PYTHON_LIB $BUNDLE_LIB_DIR
  PYTHON_LIB_NAME=$(basename $PYTHON_LIB)
  PYTHON_LIB_SYMLINK_NAME=$(echo $PYTHON_LIB | \
    sed 's/^.*libpython\(.*\.so\).*$/libpython\1/')
  ln -s $PYTHON_LIB_NAME $BUNDLE_LIB_DIR/$PYTHON_LIB_SYMLINK_NAME
  PYTHON_PACKAGE_DIR=$(echo $PYTHON_LIB | \
    sed 's/^.*libpython\(.*\).so.*$/python\1/')
  PYTHON_PACKAGE_BUNDLE_DIR=$BUNDLE_LIB_DIR/$PYTHON_PACKAGE_DIR/
  mkdir -p $PYTHON_PACKAGE_BUNDLE_DIR
  pushd $(dirname $PYTHON_LIB)/$PYTHON_PACKAGE_DIR > /dev/null 2>&1
  if [ "$?" != "0" ]; then
    echo "$(dirname $PYTHON_LIB)/$PYTHON_PACKAGE_DIR does not exist"
    exit
  fi
  echo "copying $(dirname $PYTHON_LIB)/$PYTHON_PACKAGE_DIR files into \
  $PYTHON_PACKAGE_BUNDLE_DIR"
  find . \( -type f \) \( ! -name "*.pyc" \) \( ! -name "*.pyo" \) -exec \
    cp --parents --preserve=mode {} $PYTHON_PACKAGE_BUNDLE_DIR \;
  popd > /dev/null 2>&1
fi

# copy required shared libs using linuxdeployqt tool
wget "https://github.com/probonopd/linuxdeployqt/releases/download/\
continuous/linuxdeployqt-continuous-x86_64.AppImage"
chmod a+x linuxdeployqt-continuous-x86_64.AppImage

./linuxdeployqt-continuous-x86_64.AppImage --appimage-extract-and-run \
  $BUNDLE_BIN_DIR/talipot -bundle-non-qt-libs -no-translations

pushd $BUNDLE_LIB_DIR > /dev/null 2>&1

popd > /dev/null 2>&1

pushd $BUNDLE_USR_DIR > /dev/null 2>&1

# create a symbolic link lib64 pointing to lib in $BUNDLE_DIR/usr
# in order for Python to find its standard library on a x86_64 AppImage
ln -s lib @CMAKE_INSTALL_LIBDIR@ 2>/dev/null

popd > /dev/null 2>&1
