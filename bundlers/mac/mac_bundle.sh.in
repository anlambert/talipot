#!/bin/sh

function usage {
    echo "Usage : $0 <Bundle Destination Dir> [<Application Name>=Talipot]"
}

APP_NAME=Talipot

if [ $# -eq 2 ]
then
    APP_NAME=$2
else
    if [ $# -ne 1 ]
    then
        usage $0
        exit 1
    fi
fi

TALIPOT_DIR=@CMAKE_INSTALL_PREFIX@
DEST_DIR=$1
SRC_DIR=@talipot_SOURCE_DIR@/bundlers/mac
QT_BINARY_DIR=@QT_BINARY_DIR@

if [ "${QT_BINARY_DIR}" = "" ]
then
    QT_BINARY_DIR=@_qt5Gui_install_prefix@/bin
fi

export PATH=${QT_BINARY_DIR}:${PATH}
export QT_VERSION=$(qmake -query QT_VERSION)

if [ ! -d ${TALIPOT_DIR} ]
then
    echo "Error : the specified Talipot installation directory does not exist"
    exit 1
fi

echo "Wiping previous bundles into ${DEST_DIR}"
rm -rf "${DEST_DIR}/application" 2>/dev/null
rm -f "${DEST_DIR}/${APP_NAME}-@TalipotVersion@.dmg" 2>/dev/null
mkdir -p "${DEST_DIR}/application"
cd "${DEST_DIR}/application"
mkdir .background
cp "${SRC_DIR}/background.png" .background/
rm -rf * 2>/dev/null

echo 'Creating base directories'
cd "${DEST_DIR}/application"
mkdir -p Talipot.app/Contents/{MacOS,Resources,Frameworks}
cd Talipot.app/Contents
cp "${SRC_DIR}/talipot.icns" Resources/
cp "${SRC_DIR}/Info.plist" .

echo 'Copying binaries & libraries'
cd "${DEST_DIR}/application/Talipot.app/Contents/"
cp -r "${TALIPOT_DIR}"/* .
mv lib/*.dylib Frameworks/
rm -rf include
rm -rf lib/cmake
find lib/talipot/python/ | grep -E "(__pycache__|\.pyc|\.pyo$)" | xargs rm -rf

echo 'Copying Graphviz plugins'
GV_DIR=$(dirname @Graphviz_GVPLUGIN_CORE_LIBRARY@)
cp -r $GV_DIR Frameworks/graphviz

echo 'Copying Python Framework'
mkdir -p Frameworks/Python.framework/Versions/@PYTHON_VERSION@
cp -r @PYTHON_STDLIB_DIR@/../../* Frameworks/Python.framework/Versions/@PYTHON_VERSION@/
find Frameworks/Python.framework/ | grep -E "(__pycache__|\.pyc|\.pyo$)" | xargs rm -rf
rm -rf Frameworks/Python.framework/Versions/@PYTHON_VERSION@/share

echo 'Copying License'
cd "${DEST_DIR}/application"
cp "${SRC_DIR}/../../LICENSE" .

QT_LIB_DIR="@QT_QTCORE_LIBRARY@/.."
TALIPOT_APP=${DEST_DIR}/application/Talipot.app
echo 'Copying Resources'
cd "${TALIPOT_APP}/Contents/Frameworks/"
cp -r "${QT_LIB_DIR}/QtGui.framework/Resources/qt_menu.nib" ../Resources 2>/dev/null
cp "@QT_QTCLUCENE_LIBRARY@" . 2>/dev/null

cd ..
# configure talipot
mv bin/talipot MacOS/Talipot
# tell macdeployqt to also process Talipot Python dynamic module (not processed by default as
# its extension is .so instead of .dylib)
mac_deploy_qt_opts=-executable=${TALIPOT_APP}/Contents/lib/talipot/python/talipot/native/talipot.so
if [ $(echo ${QT_VERSION} | cut -c1) -ge 6 ]
then
    # qt plugins end up with broken rpaths when using macdeployt from Qt6
    # so we will copy them manually afterwards
    mac_deploy_qt_opts+=" -no-plugins"
fi

# use macdeployqt to copy and relink executable and libraries
${QT_BINARY_DIR}/macdeployqt ${TALIPOT_APP} $mac_deploy_qt_opts

# ensure clang libc++* are present in bundle
LIB_CXX_DIR=$(echo "@CMAKE_SHARED_LINKER_FLAGS@" | cut -f1 -d" " | cut -c3-)
if [ -d ${LIB_CXX_DIR} ]
then
    cp ${LIB_CXX_DIR}/libc++.1.dylib ${TALIPOT_APP}/Contents/Frameworks/
    cp ${LIB_CXX_DIR}/libc++abi.1.dylib ${TALIPOT_APP}/Contents/Frameworks/
fi

# also needed when compiled with homebrew clang
if [ -f ${LIB_CXX_DIR}/../libunwind.1.dylib ]
then
    cp ${LIB_CXX_DIR}/../libunwind.1.dylib ${TALIPOT_APP}/Contents/Frameworks/
fi

# copy missing dependencies when using Qt6
if [ $(echo ${QT_VERSION} | cut -c1) -ge 6 ]
then
    mkdir ${TALIPOT_APP}/Contents/PlugIns
    for plugins in iconengines imageformats networkinformation platforminputcontexts \
platforms position styles tls
    do
        cp -r ${QT_BINARY_DIR}/../share/qt/plugins/${plugins} ${TALIPOT_APP}/Contents/PlugIns
    done
    for framework in QtSvg QtQuickWidgets
    do
        cp -r ${QT_BINARY_DIR}/../lib/${framework}.framework ${TALIPOT_APP}/Contents/Frameworks
    done
fi

mv MacOS/Talipot bin/talipot
# rename
mv ${TALIPOT_APP} ${DEST_DIR}/application/${APP_NAME}-@TalipotVersion@.app

# create launcher
cat > MacOS/Talipot <<EOF
#!/bin/sh

wd="\${0%/*}"
cd "\$wd/.."

export DYLD_FRAMEWORK_PATH="\$(pwd)/Frameworks"
export DYLD_FALLBACK_LIBRARY_PATH="\$(pwd)/Frameworks"
export QT_QPA_PLATFORM_PLUGIN_PATH="\$(pwd)/PlugIns/platforms"
export QT_PLUGIN_PATH="\$(pwd)/PlugIns"
export FONTCONFIG_PATH="\$(pwd)/etc/fonts"
"\$(pwd)"/bin/talipot \$*

EOF
# make it executable
chmod +x MacOS/Talipot

MACOS_VERSION=$(echo @MACOS_VERSION@ | cut -c1-2)

# generate dmg
echo 'Generating DMG'
cd "${DEST_DIR}"
sh "${SRC_DIR}/make_dmg.sh" ${APP_NAME} "@TalipotVersion@" \
"${DEST_DIR}/application" "${MACOS_VERSION}"

echo "${APP_NAME}-@TalipotVersion@-macOS-${MACOS_VERSION}.dmg \
has been successfully generated in ${DEST_DIR}"

# rename dmg
mv ${APP_NAME}-@TalipotVersion@.dmg \
${APP_NAME}-@TalipotVersion@-@CMAKE_HOST_SYSTEM_PROCESSOR@\
-macOS-${MACOS_VERSION}-qt${QT_VERSION}.dmg

