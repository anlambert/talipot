name: ubuntu-qt6-build
on: [push, pull_request]
jobs:
  ubuntu:
    name: Talipot Qt6 build on Ubuntu 22.04
    runs-on: ubuntu-22.04
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}
      - name: Checkout Talipot code
        uses: actions/checkout@v4
      - name: Apt update
        run: sudo apt update
      - name: Install Talipot build dependencies
        run: sudo apt install
          cmake
          ccache
          curl
          ninja-build
          libqhull-dev
          libyajl-dev
          libgit2-dev
          libgraphviz-dev
          libpython3-dev
          libcppunit-dev
          binutils-dev
          libzstd-dev
          libglew-dev
          libfreetype6-dev
          libfribidi-dev
          libfontconfig-dev
          python3
          python3-pip
          doxygen
          graphviz
          qt6-base-dev
          libqt6core5compat6-dev
          qt6-webengine-dev
          qt6-webengine-dev-tools
          xvfb
      - name: Install sphinx and sip
        run: sudo pip install sphinx sip
      - name: Prepare ccache timestamp
        id: get-current-date
        run: |
          echo "date=$(date -u "+%Y-%m-%d-%H-%m-%S")" >> $GITHUB_OUTPUT
        shell: bash
      - name: Cache files
        uses: actions/cache@v4
        with:
          path: ~/.ccache
          key: ubuntu-qt6-build-ccache-${{ steps.get-current-date.outputs.date }}
          restore-keys: |
            ubuntu-qt6-build-ccache-
          save-always: true
      - name: Create build directory
        run: mkdir build
      - name: Configure Talipot build with CMake
        working-directory: ./build
        run: cmake .. -G Ninja
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_INSTALL_PREFIX=$PWD/install
          -DTALIPOT_USE_QT6=ON
          -DTALIPOT_BUILD_TESTS=ON
          -DTALIPOT_USE_CCACHE=ON
      - name: Talipot build
        working-directory: ./build
        run: ninja -j4
      - name: Install Talipot
        working-directory: ./build
        run: ninja -j4 install
      - name: Run Talipot unit tests
        working-directory: ./build
        run: xvfb-run ninja tests
      - name: Check Talipot application can be executed
        working-directory: ./build/install/bin
        run: xvfb-run ./talipot --check-application-starts --debug-plugins-load
