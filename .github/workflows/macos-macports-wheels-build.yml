name: macos-macports-wheels-build
on: [push, pull_request]
jobs:
  macos:
    name: Talipot Python wheels build on MacOS
    runs-on: macos-10.15
    env:
      CLANG_VERSION: 12
      MACOSX_DEPLOYMENT_TARGET: 10.9
      TWINE_REPOSITORY: https://test.pypi.org/legacy/
      TWINE_USERNAME: __token__
      TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
    steps:
      - name: Checkout Talipot code
        uses: actions/checkout@v2
      - name: Get wheel next dev version
        run: |
          JSON=$(curl -s 'https://test.pypi.org/pypi/talipot/json')
          LAST_VERSION=$(echo $JSON | python -c "
          import sys, json
          print(json.load(sys.stdin)['info']['version'])" 2>/dev/null)

          if [ $? -ne 0 ]
          then
            DEV_VERSION=1
          else
            echo last wheel dev version = $LAST_VERSION

            # check if dev wheel version needs to be incremented
            VERSION_INCREMENT=$(echo $JSON | python -c "
          import sys, json
          releases = json.load(sys.stdin)['releases']['$LAST_VERSION']
          print(any(['macosx' in r['filename'] for r in releases]))")
            DEV_VERSION=$(echo $LAST_VERSION | cut -f4 -d '.' | sed 's/dev//')

            if [ "$VERSION_INCREMENT" == "True" ]
            then
              let DEV_VERSION+=1
            fi
          fi
          echo current wheel dev version = $DEV_VERSION
          echo "DEV_VERSION=$DEV_VERSION" >> $GITHUB_ENV
      - name: Prepare ccache timestamp
        id: get-current-date
        run: |
          echo "::set-output name=date::$(date -u "+%Y-%m-%d-%H-%m-%S")"
        shell: bash
      - name: Cache files
        uses: actions/cache@v2
        with:
          path: |
            /Users/runner/Library/Caches/ccache
            /Users/runner/.macports-ci-ccache
          key: macos-wheels-ccache-${{ steps.get-current-date.outputs.date }}
          restore-keys: |
            ${{ matrix.config.os }}-ccache-
      - name: Install MacPorts
        run: |
          curl -LO https://raw.githubusercontent.com/anlambert/macports-ci/master/macports-ci
          source ./macports-ci install
          source ./macports-ci ccache
      - name: Install CMake and Clang
        run: sudo port -N install
          cmake
          clang-${{ env.CLANG_VERSION }}
          bison
      - name: Force ports build to MACOSX_DEPLOYMENT_TARGET
        run: |
          echo "macosx_deployment_target ${{ env.MACOSX_DEPLOYMENT_TARGET }}" | \
            sudo tee -a /opt/local/etc/macports/macports.conf
          echo "buildfromsource always" | \
            sudo tee -a /opt/local/etc/macports/macports.conf
      - name: Install Talipot build dependencies
        run: |
          # force rebuild of already installed dependencies
          sudo port -N uninstall -f \
            zlib \
            zstd \
            libomp
          # build dependencies
          sudo port -N install \
            zlib \
            zstd \
            libomp \
            qhull \
            yajl \
            libgit2
      - name: Save MacPorts ccache
        run: source ./macports-ci ccache --save
      - name: Build Graphviz from sources
        run: |
          git clone https://gitlab.com/graphviz/graphviz.git
          cd graphviz
          git checkout 2.49.0
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_INSTALL_PREFIX=/opt/local \
            -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
            -DCMAKE_C_COMPILER=/opt/local/bin/clang-mp-${{ env.CLANG_VERSION }} \
            -DCMAKE_CXX_COMPILER=/opt/local/bin/clang++-mp-${{ env.CLANG_VERSION }} \
            -DBISON_EXECUTABLE=/opt/local/bin/bison \
            -Denable_ltdl=OFF \
            -Dwith_expat=OFF \
            -DCMAKE_MACOSX_RPATH=OFF \
            -DCMAKE_INSTALL_NAME_DIR=/opt/local/lib
          make -j4
          sudo make install
      - name: Install Python versions to build wheels against
        run: |
          curl -LO https://www.python.org/ftp/python/3.7.6/python-3.7.6-macosx10.9.pkg
          sudo installer -pkg python-3.7.6-macosx10.9.pkg -target /
          sudo /Library/Frameworks/Python.framework/Versions/3.7/bin/pip3 install wheel
          curl -LO https://www.python.org/ftp/python/3.8.1/python-3.8.1-macosx10.9.pkg
          sudo installer -pkg python-3.8.1-macosx10.9.pkg -target /
          sudo /Library/Frameworks/Python.framework/Versions/3.8/bin/pip3 install wheel
          curl -LO https://www.python.org/ftp/python/3.9.0/python-3.9.0-macosx10.9.pkg
          sudo installer -pkg python-3.9.0-macosx10.9.pkg -target /
          sudo /Library/Frameworks/Python.framework/Versions/3.9/bin/pip3 install wheel
          sudo /Library/Frameworks/Python.framework/Versions/3.9/bin/pip3 install twine
      - name: Create build directory
        run: mkdir build
      - name: Build Talipot Python wheels
        working-directory: ./build
        run: |
          for py3Version in 3.7 3.8 3.9
          do
            cmake .. -DCMAKE_BUILD_TYPE=Release \
              -DCMAKE_INSTALL_PREFIX=$PWD/install \
              -DCMAKE_C_COMPILER=/opt/local/bin/clang-mp-${{ env.CLANG_VERSION }} \
              -DCMAKE_CXX_COMPILER=/opt/local/bin/clang++-mp-${{ env.CLANG_VERSION }} \
              -DTALIPOT_ACTIVATE_PYTHON_WHEEL_TARGET=ON \
              -DTALIPOT_PYTHON_TEST_WHEEL_SUFFIX=a1.dev${{ env.DEV_VERSION }}\
              -DPYTHON_EXECUTABLE=/Library/Frameworks/Python.framework/Versions/$py3Version/bin/python3 \
              -DTALIPOT_USE_CCACHE=ON \
              -DTALIPOT_BUILD_CORE_ONLY=ON \
              -DTALIPOT_BUILD_DOC=OFF
            make -j4 test-wheel
          done
      - name: Upload Talipot Python wheels on test PyPI
        if: github.ref == 'refs/heads/master'
        working-directory: ./build
        run: make test-wheel-upload
      - name: Test uploaded wheels in clean environment
        run: |
          sudo port -N -f uninstall \
            cmake \
            clang-${CLANG_VERSION} \
            qhull \
            yajl \
            libgit2

          sudo pip3.7 install --index-url https://test.pypi.org/simple/ talipot
          python3.7 -c "from talipot import tlp; print(tlp.getLayoutAlgorithmPluginsList())"
          python3.7 -c "from talipot import tlp; print(tlp.getImportPluginsList())"

          sudo port -N install \
            python39 \
            py39-pip

          sudo pip-3.9 install --index-url https://test.pypi.org/simple/ talipot
          python3.9 -c "from talipot import tlp; print(tlp.getLayoutAlgorithmPluginsList())"
          python3.9 -c "from talipot import tlp; print(tlp.getImportPluginsList())"
