name: macos-macports-wheels-build
on: [push, pull_request]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  macos:
    name: Talipot wheel build for Python ${{ matrix.python-version }}
      on ${{ matrix.config.os }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13", "3.14"]
        config:
          - os: macos-14
            macosx_deployment_target: "14.0"
            arch: arm64
          - os: macos-15-intel
            macosx_deployment_target: "15.0"
            arch: x86_64
          - os: macos-15
            macosx_deployment_target: "15.0"
            arch: arm64
          # - os: macos-26
          #   macosx_deployment_target: "26.0"
          #   arch: arm64

    env:
      CLANG_VERSION: 20
      MACOSX_DEPLOYMENT_TARGET: ${{ matrix.config.macosx_deployment_target }}
      TWINE_REPOSITORY_URL: https://test.pypi.org/legacy/
      TWINE_USERNAME: __token__
      TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
      
    steps:
      - name: Checkout Talipot code
        uses: actions/checkout@v4
      - name: Install Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        id: python-install
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install build and twine Python packages
        run: |
          which python
          python --version
          sudo pip install twine build
      - name: Prepare ccache timestamp
        id: get-current-date
        run: |
          echo "date=$(date -u "+%Y-%m-%d-%H-%m-%S")" >> $GITHUB_OUTPUT
        shell: bash
      - name: Get ccache directory
        id: get-cccache-dir
        run: |
          ccache_dir=$(ccache -sv | grep "Cache directory" | awk '{print $3}')
          echo "ccache-dir=$ccache_dir" >> $GITHUB_OUTPUT
        shell: bash
      - name: Cache files
        uses: actions/cache@v4
        with:
          path: |
            ${{ steps.get-cccache-dir.outputs.ccache-dir }}
            /Users/runner/.macports-ci-ccache
          key: macos-wheels-ccache-${{ matrix.python-version }}-${{ steps.get-current-date.outputs.date }}
          restore-keys: |
            ${{ matrix.config.os }}-ccache-${{ matrix.python-version }}-
      - name: Install MacPorts
        run: |
          curl -LO https://raw.githubusercontent.com/GiovanniBussi/macports-ci/master/macports-ci
          source ./macports-ci install --sync=rsync
      - name: Install Talipot build dependencies
        run: sudo port -N install
          cmake
          ccache
          bison
          zlib
          zstd
          libomp
          qhull
          yajl
          libgit2
          graphviz
      - name: Sets CIBW_BUILD environment variable
        env:
          pyVer: "${{matrix.python-version}}"
          arch: "${{matrix.config.arch}}"
        run: |
          echo "CIBW_BUILD=cp${pyVer/./}-macosx_$arch" >> $GITHUB_ENV
      - name: Build Talipot wheel with cibuildwheel
        run: |
          pip install cibuildwheel --user
          python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD_VERBOSITY: 1
      - name: Test built wheel can be installed and imported
        working-directory: wheelhouse
        run: |
          pip install $(ls -t | head -1)
          python -c "from talipot import tlp; print(tlp.getLayoutAlgorithmPluginsList())"
          python -c "from talipot import tlp; print(tlp.getImportPluginsList())"
      - uses: actions/upload-artifact@v4
        with:
          name: talipot-wheel-${{ matrix.python-version }}
            -${{ matrix.config.macosx_deployment_target }}-${{ matrix.config.arch }}
          path: ./wheelhouse/*.whl
      - name: Publish Talipot wheel to TestPyPI
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
        run: |
          twine check wheelhouse/*
          twine upload --skip-existing wheelhouse/*
