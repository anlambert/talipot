PROJECT(QuaZip_Library VERSION ${QUAZIP_LIB_VERSION})

INCLUDE(GNUInstallDirs) # configurable CMAKE_INSTALL_*DIR

CMAKE_MINIMUM_REQUIRED(VERSION 3.13)

SET(QUAZIP_HEADERS
    JlCompress.h
    ioapi.h
    minizip_crypt.h
    quaadler32.h
    quachecksum32.h
    quacrc32.h
    quagzipfile.h
    quaziodevice.h
    quazip.h
    quazip_global.h
    quazip_qt_compat.h
    quazipdir.h
    quazipfile.h
    quazipfileinfo.h
    quazipnewinfo.h
    unzip.h
    zip.h)

SET(QUAZIP_SOURCES
    ${QUAZIP_HEADERS}
    unzip.c
    zip.c
    JlCompress.cpp
    qioapi.cpp
    quaadler32.cpp
    quachecksum32.cpp
    quacrc32.cpp
    quagzipfile.cpp
    quaziodevice.cpp
    quazip.cpp
    quazipdir.cpp
    quazipfile.cpp
    quazipfileinfo.cpp
    quazipnewinfo.cpp)

SET(QUAZIP_INCLUDE_PATH ${QUAZIP_DIR_NAME}/quazip)
SET(QUAZIP_INSTALL_CONFIGDIR ${CMAKE_INSTALL_LIBDIR}/cmake)
SET(QUAZIP_PKGCONFIG_NAME
    quazip${QuaZip_VERSION_MAJOR}-qt${QUAZIP_QT_MAJOR_VERSION})

IF(EMSCRIPTEN)
  SET(BUILD_SHARED_LIBS OFF)
ENDIF()

ADD_LIBRARY(${QUAZIP_LIB_TARGET_NAME} ${QUAZIP_SOURCES})
# add_library(QuaZip::QuaZip ALIAS ${QUAZIP_LIB_TARGET_NAME})

SET_TARGET_PROPERTIES(
  ${QUAZIP_LIB_TARGET_NAME}
  PROPERTIES VERSION ${QUAZIP_LIB_VERSION}
             SOVERSION ${QUAZIP_LIB_SOVERSION}
             OUTPUT_NAME ${QUAZIP_LIB_FILE_NAME}
             PUBLIC_HEADER "${QUAZIP_HEADERS}")
TARGET_INCLUDE_DIRECTORIES(${QUAZIP_LIB_TARGET_NAME} PRIVATE ${QUAZIP_INC})
TARGET_INCLUDE_DIRECTORIES(
  ${QUAZIP_LIB_TARGET_NAME}
  PUBLIC $<BUILD_INTERFACE:${QUAZIP_SOURCE_DIR}>
         $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
         $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}/${QUAZIP_DIR_NAME}>
         $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}/${QUAZIP_INCLUDE_PATH}>
)
TARGET_LINK_LIBRARIES(${QUAZIP_LIB_TARGET_NAME} ${QUAZIP_LIB_LIBRARIES}
                      ${QUAZIP_LIB})
IF(BUILD_SHARED_LIBS)
  TARGET_COMPILE_DEFINITIONS(${QUAZIP_LIB_TARGET_NAME} PRIVATE QUAZIP_BUILD
  )# dllexport
ELSE()
  TARGET_COMPILE_DEFINITIONS(${QUAZIP_LIB_TARGET_NAME} PUBLIC QUAZIP_STATIC
  )# suppress dllimport
ENDIF()
TARGET_LINK_DIRECTORIES(${QUAZIP_LIB_TARGET_NAME} PUBLIC ${QUAZIP_LBD})

INCLUDE(CMakePackageConfigHelpers)

IF(QUAZIP_INSTALL)
  IF(BUILD_SHARED_LIBS)
    SET(Flavor Shared)
  ELSE()
    SET(Flavor Static)
  ENDIF()
  SET(QUAZIP_EXPORT_SET ${QUAZIP_PACKAGE_NAME}_${Flavor}Targets)
  WRITE_BASIC_PACKAGE_VERSION_FILE(
    ${PROJECT_BINARY_DIR}/${QUAZIP_PACKAGE_NAME}ConfigVersion.cmake
    COMPATIBILITY SameMajorVersion)
  CONFIGURE_PACKAGE_CONFIG_FILE(
    QuaZipConfig.cmake.in ${QUAZIP_PACKAGE_NAME}Config.cmake
    INSTALL_DESTINATION ${QUAZIP_INSTALL_CONFIGDIR}/${QUAZIP_DIR_NAME})
  INSTALL(
    TARGETS ${QUAZIP_LIB_TARGET_NAME} ${QUAZIP_DEP}
    EXPORT ${QUAZIP_EXPORT_SET}
    PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/${QUAZIP_INCLUDE_PATH}
  )
  INSTALL(
    EXPORT ${QUAZIP_EXPORT_SET}
    NAMESPACE QuaZip::
    DESTINATION ${QUAZIP_INSTALL_CONFIGDIR}/${QUAZIP_DIR_NAME})
  INSTALL(FILES ${PROJECT_BINARY_DIR}/${QUAZIP_PACKAGE_NAME}Config.cmake
                ${PROJECT_BINARY_DIR}/${QUAZIP_PACKAGE_NAME}ConfigVersion.cmake
          DESTINATION ${QUAZIP_INSTALL_CONFIGDIR}/${QUAZIP_DIR_NAME})

  CONFIGURE_FILE(quazip.pc.cmakein ${QUAZIP_PKGCONFIG_NAME}.pc @ONLY)
  INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/${QUAZIP_PKGCONFIG_NAME}.pc
          DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig)
ENDIF()
