# require 3.15 for GNUInstallDirs
CMAKE_MINIMUM_REQUIRED(VERSION 3.15...3.18)

PROJECT(QuaZip VERSION 1.1)

SET(CMAKE_CXX_STANDARD 14)

SET(QUAZIP_LIB_VERSION ${QuaZip_VERSION})
SET(QUAZIP_LIB_SOVERSION 1.0.0)

OPTION(BUILD_SHARED_LIBS "" ON)
SET(QUAZIP_QT_MAJOR_VERSION
    6
    CACHE STRING "Qt version to use (4, 5 or 6), defaults to 6")

IF(NOT CMAKE_BUILD_TYPE)
  SET(CMAKE_BUILD_TYPE RELEASE)
ENDIF()

ENABLE_TESTING()
SET(CMAKE_AUTOMOC ON)
SET(CMAKE_INCLUDE_CURRENT_DIR ON)
SET(CMAKE_DEBUG_POSTFIX d)

SET(QUAZIP_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR})
SET(QUAZIP_BINARY_DIR ${CMAKE_CURRENT_BINARY_DIR})
SET(QUAZIP_LIB_FILE_NAME
    quazip${QuaZip_VERSION_MAJOR}-qt${QUAZIP_QT_MAJOR_VERSION})
SET(QUAZIP_LIB_TARGET_NAME QuaZip)
SET(QUAZIP_DIR_NAME QuaZip-Qt${QUAZIP_QT_MAJOR_VERSION}-${QUAZIP_LIB_VERSION})
SET(QUAZIP_PACKAGE_NAME QuaZip-Qt${QUAZIP_QT_MAJOR_VERSION})
SET(QUAZIP_ENABLE_TESTS OFF)
IF(QUAZIP_QT_MAJOR_VERSION EQUAL 6)
  FIND_PACKAGE(
    Qt6 REQUIRED
    COMPONENTS Core Core5Compat
    OPTIONAL_COMPONENTS Network Test)
  SET(QUAZIP_LIB_QT_LIBRARIES Qt6::Core Qt6::Core5Compat)
  SET(QUAZIP_TEST_QT_LIBRARIES Qt6::Core Qt6::Core5Compat Qt6::Network
                               Qt6::Test)
  SET(QUAZIP_PKGCONFIG_REQUIRES Qt6Core)
  IF(Qt6Network_FOUND AND Qt6Test_FOUND)
    SET(QUAZIP_ENABLE_TESTS ON)
  ENDIF()
ELSEIF(QUAZIP_QT_MAJOR_VERSION EQUAL 5)
  FIND_PACKAGE(
    Qt5 REQUIRED
    COMPONENTS Core
    OPTIONAL_COMPONENTS Network Test)
  SET(QUAZIP_LIB_QT_LIBRARIES Qt5::Core)
  SET(QUAZIP_TEST_QT_LIBRARIES Qt5::Core Qt5::Network Qt5::Test)
  SET(QUAZIP_PKGCONFIG_REQUIRES Qt5Core)
  IF(Qt5Network_FOUND AND Qt5Test_FOUND)
    SET(QUAZIP_ENABLE_TESTS ON)
  ENDIF()
ELSEIF(QUAZIP_QT_MAJOR_VERSION EQUAL 4)
  FIND_PACKAGE(
    Qt4 4.5.0 REQUIRED
    COMPONENTS QtCore
    OPTIONAL_COMPONENTS QtNetwork QtTest)
  SET(QUAZIP_LIB_QT_LIBRARIES Qt4::QtCore)
  SET(QUAZIP_TEST_QT_LIBRARIES Qt4::QtCore Qt4::QtNetwork Qt4::QtTest)
  SET(QUAZIP_PKGCONFIG_REQUIRES QtCore)
  IF(QT_QTNETWORK_FOUND AND QT_QTTEST_FOUND)
    SET(QUAZIP_ENABLE_TESTS ON)
  ENDIF()
ELSE()
  MESSAGE(FATAL_ERROR "Qt version ${QUAZIP_QT_MAJOR_VERSION} is not supported")
ENDIF()

FIND_PACKAGE(ZLIB REQUIRED)

ADD_SUBDIRECTORY(quazip)

# if(QUAZIP_ENABLE_TESTS) add_subdirectory(qztest EXCLUDE_FROM_ALL) endif()
