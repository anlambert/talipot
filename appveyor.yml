# Talipot continuous integration on windows platform through AppVeyor.
# Talipot will be compiled for 32 bits and 64 bits windows using :
#   - GCC compiler provided by the MSYS2 project
#   - Microsoft Visual Studio 2015 compiler
# C++11 standard, Qt >= 5.9 and Python 3.7 will be used to build Talipot with both compilers.

# use Visual Studio 2015 appveyor image for the builds
os: Visual Studio 2015

# Use build caches that will be saved and restored between build jobs.
# Those caches will hold ccache content for gcc builds and clcache content for msvc builds
# in order to speedup incremental builds.
# Appveyor cache storage is limited to 1GB, so cache should be cleared once it is exceeding this quota
# (see https://www.appveyor.com/docs/build-cache/)
cache:
  - C:\msys64\home\appveyor\.ccache
  - C:\Users\appveyor\clcache

init:
  - ps: $env:APPVEYOR_SAVE_CACHE_ON_ERROR = "true"

# define build jobs
environment:
  matrix:
    # GCC core build
    - MSYS2_ARCH: x86_64
      MSYSTEM: MINGW64
      PYTHON2_HOME: "C:/Python27-x64"
      PYTHON3_HOME: "C:/Python37-x64"

    # GCC complete build
    - MSYS2_ARCH: x86_64
      MSYSTEM: MINGW64
      PYTHON2_HOME: "C:/Python27-x64"
      PYTHON3_HOME: "C:/Python37-x64"

    # MSVC core build
    - CMAKE_VS_GENERATOR: "Visual Studio 14 2015 Win64"
      MSVC_PLATFORM: "x64"
      MSVC_PLATFORM_TOOLSET: "v140"
      QT5_DIR: "C:/Qt/5.12/msvc2015_64"
      PYTHON_EXECUTABLE: "C:/Python37-x64/python.exe"

    # MSVC complete build
    - CMAKE_VS_GENERATOR: "Visual Studio 14 2015 Win64"
      MSVC_PLATFORM: "x64"
      MSVC_PLATFORM_TOOLSET: "v140"
      QT5_DIR: "C:/Qt/5.12/msvc2015_64"
      PYTHON_EXECUTABLE: "C:/Python37-x64/python.exe"

# build script that simply call the right batch script depending on the compiler used
build_script:
  - if defined MSYS2_ARCH ("%APPVEYOR_BUILD_FOLDER%\appveyor_msys2.bat") else ("%APPVEYOR_BUILD_FOLDER%\appveyor_msvc.bat")

# get the Talipot version for deployment
after_build:
  - ps: "$env:TALIPOT_VERSION = (((Get-Content ($env:APPVEYOR_BUILD_FOLDER + '/build/library/talipot-core/include/talipot/Release.h') | %{ if ($_ -match '^#   define TALIPOT_VERSION.*$') { $_; } }) -replace '#   define TALIPOT_VERSION ', '') -replace '\"', '' -replace '_', '.')"

# set generated installers as artifacts to deploy
artifacts:
  - path: build\*.exe
    name: talipot_installers

# deploy Talipot installers on bintray
deploy:
  - provider: BinTray
    on:
      branch: master
    username: anlambert
    api_key:
      secure: uL6yGLvWIQkeqyYKFzshycul9WpaBj5P4SYUvtAnlcpxaDhL3Ek+sxm+XRYFfH7n
    subject: anlambert
    repo: talipot_binaries
    package: Talipot
    version: $(TALIPOT_VERSION)
    publish: true
    override: true
    artifact: talipot_installers

notifications:
  - provider: Email
    on_build_success: false
