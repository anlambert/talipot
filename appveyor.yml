# Talipot continuous integration on Windows and MacOS platform through AppVeyor.

# define build jobs
environment:
  matrix:
    # # Windows MSYS2 GCC core build
    # - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
    #   MSYS2_ARCH: x86_64
    #   MSYSTEM: MINGW64
    #   BUILD_WHEELS: "false"
    # # Windows MSYS2 GCC complete build
    # - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
    #   MSYS2_ARCH: x86_64
    #   MSYSTEM: MINGW64
    #   BUILD_WHEELS: "false"
    # # MacOS core build
    # - APPVEYOR_BUILD_WORKER_IMAGE: macos
    #   BUILD_WHEELS: "false"
    # # MacOS complete build
    # - APPVEYOR_BUILD_WORKER_IMAGE: macos
    #   BUILD_WHEELS: "false"

    # Windows MSVC core build
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      CMAKE_VS_GENERATOR: Visual Studio 16 2019
      MSVC_ARCH: x64
      QT5_DIR: C:/Qt/5.15/msvc2019_64
      PYTHON_EXECUTABLE: C:/Python310-x64/python.exe
    # Windows MSVC complete build
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      CMAKE_VS_GENERATOR: Visual Studio 16 2019
      MSVC_ARCH: x64
      QT5_DIR: C:/Qt/5.15/msvc2019_64
      PYTHON_EXECUTABLE: C:/Python310-x64/python.exe
    # Windows MSYS2 GCC Python wheels build
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      MSYS2_ARCH: x86_64
      MSYSTEM: MINGW64
      BUILD_WHEELS: "true"
      TWINE_REPOSITORY: https://test.pypi.org/legacy/
      TWINE_USERNAME: __token__
      TWINE_PASSWORD:
        secure: 69gKUYg72j5gedVBM/dWr+0D2rTf/IxMcQ0mBVxat0e9P4Mkv
          ubhOsDIHKSOtnUc9WN3ns1Z8KLbESG/wvmVs4kaWQzLDcopID
          1obaaNl2bt9E2GliNcbAgEiHEHp7dj+nVkGw0ur32Yi4F2OJN
          dg57bgn2mRZWfK+3qBUPIhzaH5PqJ7FW4qKADpiANyHs+8EES
          sxXIe/QPXpqPeAjbwdrcJ7QmL2vIllXthlGgryWyg62ZE6kIy
          Dy+jye9nWLq

    # # MacOS Python wheels build
    # - APPVEYOR_BUILD_WORKER_IMAGE: macos
    #   BUILD_WHEELS: "true"
    #   TWINE_REPOSITORY: https://test.pypi.org/legacy/
    #   TWINE_USERNAME: __token__
    #   TWINE_PASSWORD:
    #     secure: 69gKUYg72j5gedVBM/dWr+0D2rTf/IxMcQ0mBVxat0e9P4Mkv
    #       ubhOsDIHKSOtnUc9WN3ns1Z8KLbESG/wvmVs4kaWQzLDcopID
    #       1obaaNl2bt9E2GliNcbAgEiHEHp7dj+nVkGw0ur32Yi4F2OJN
    #       dg57bgn2mRZWfK+3qBUPIhzaH5PqJ7FW4qKADpiANyHs+8EES
    #       sxXIe/QPXpqPeAjbwdrcJ7QmL2vIllXthlGgryWyg62ZE6kIy
    #       Dy+jye9nWLq

# build jobs configuration according to OS
for:
  - matrix:
      only:
        - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019

    cache:
      - C:\msys64\home\appveyor\ccache
      - C:\Users\appveyor\clcache
      - C:\Tools\vcpkg\installed\

    init:
      - ps: $env:APPVEYOR_SAVE_CACHE_ON_ERROR = "true"

    # build script that simply call the right batch script depending on the compiler used
    build_script:
      - if defined MSYS2_ARCH (
        "%APPVEYOR_BUILD_FOLDER%\appveyor\appveyor_msys2.bat" %BUILD_WHEELS%
        ) else (
        "%APPVEYOR_BUILD_FOLDER%\appveyor\appveyor_msvc.bat"
        )

    # get the Talipot version for deployment
    after_build:
      - ps: |
          $env:PATH="C:/msys64/usr/bin;$env:PATH"
          $env:TALIPOT_VERSION=(bash -c "bash build/talipot-config --version | sed 's/_/./g'")
          echo TALIPOT_VERSION=$env:TALIPOT_VERSION

    # set generated installers as artifacts to deploy
    artifacts:
      - path: build\*.exe
        name: talipot_installers

  - matrix:
      only:
        - APPVEYOR_BUILD_WORKER_IMAGE: macos

    cache:
      - /Users/appveyor/Library/Caches/ccache
      - /Users/appveyor/.macports-ci-ccache

    init:
      - export APPVEYOR_SAVE_CACHE_ON_ERROR="true"

    build_script:
      - |
        if [[ "$BUILD_WHEELS" == "false" ]]
        then
          bash -l $APPVEYOR_BUILD_FOLDER/appveyor/appveyor_macos.sh
        else
          bash -l $APPVEYOR_BUILD_FOLDER/bundlers/mac/talipot_python_wheels_macos_build.sh
        fi

    # get the Talipot version for deployment
    after_build:
      - |
        export TALIPOT_VERSION=$(bash build/talipot-config --version)
        echo TALIPOT_VERSION=$TALIPOT_VERSION

    # set generated bundle as artifacts to deploy
    artifacts:
      - path: build\*.dmg
        name: talipot_installers
